'use strict'

class Vector {
  constructor (x, y) {
    this.x = x
    this.y = y
  }

  plus (other) {
    return new Vector(this.x + other.x, this.y + other.y)
  }

  times (factor) {
    return new Vector(this.x * factor, this.y * factor)
  }
}

class Coin {
  constructor (pos, basePos, wobble) {
    this.pos = pos
    this.basePos = basePos
    this.wobble = wobble
    this.size = new Vector(0.6, 0.6)

    this.wobbleSpeed = 8
    this.wobbleDist = 0.07
  }

  get type () {
    return 'coin'
  }

  static create (pos) {
    const basePos = pos.plus(new Vector(0.2, 0.1))
    return new Coin(basePos, basePos, Math.random() * Math.PI * 2)
  }

  collide (state) {
    const filtered = state.actors.filter(a => a !== this)
    let status = state.status
    if (!filtered.some(a => a.type === 'coin')) status = 'won'
    return new State(state.level, filtered, status)
  }

  update (time) {
    const wobble = this.wobble + time * this.wobbleSpeed
    const wobblePos = Math.sin(wobble) * this.wobbleDist
    return new Coin(
      this.basePos.plus(new Vector(0, wobblePos)),
      this.basePos,
      wobble
    )
  }
}

class State {
  constructor (level, actors, status) {
    this.level = level
    this.actors = actors
    this.status = status
  }

  static start (level) {
    return new State(level, level.startActors, 'playing')
  }

  get player () {
    return this.actors.find(a => a.type === 'player')
  }

  update (time, keys) {
    const actors = this.actors.map(actor => actor.update(time, this, keys))
    let newState = new State(this.level, actors, this.status)

    if (newState.status !== 'playing') return newState

    const player = newState.player
    if (this.level.touches(player.pos, player.size, 'lava')) {
      return new State(this.level, actors, 'lost')
    }

    for (const actor of actors) {
      if (actor !== player && overlap(actor, player)) {
        newState = actor.collide(newState)
      }
    }
    return newState
  }
}

class Player {
  constructor (pos, speed) {
    this.pos = pos
    this.speed = speed
    this.size = new Vector(0.8, 1.5)

    this.playerXSpeed = 7
    this.gravity = 30
    this.jumpSpeed = 17
  }

  get type () {
    return 'player'
  }

  static create (pos) {
    return new Player(pos.plus(new Vector(0, -0.5)), new Vector(0, 0))
  }

  update (time, state, keys) {
    let xSpeed = 0
    if (keys.ArrowLeft) xSpeed -= this.playerXSpeed
    if (keys.ArrowRight) xSpeed += this.playerXSpeed

    let pos = this.pos
    const movedX = pos.plus(new Vector(xSpeed * time, 0))
    if (!state.level.touches(movedX, this.size, 'wall')) {
      pos = movedX
    }

    let ySpeed = this.speed.y + time * this.gravity
    const movedY = pos.plus(new Vector(0, ySpeed * time))
    if (!state.level.touches(movedY, this.size, 'wall')) {
      pos = movedY
    } else if (keys.ArrowUp && ySpeed > 0) {
      ySpeed = -this.jumpSpeed
    } else {
      ySpeed = 0
    }

    return new Player(pos, new Vector(xSpeed, ySpeed))
  }
}

class Lava {
  constructor (pos, speed, reset) {
    this.pos = pos
    this.speed = speed
    this.reset = reset
    this.size = new Vector(1, 1)
  }

  get type () {
    return 'lava'
  }

  static create (pos, ch) {
    if (ch === '=') {
      return new Lava(pos, new Vector(2, 0))
    } else if (ch === '|') {
      return new Lava(pos, new Vector(0, 2))
    } else if (ch === 'v') {
      return new Lava(pos, new Vector(0, 3), pos)
    }
  }

  collide (state) {
    return new State(state.level, state.actors, 'lost')
  }

  update (time, state) {
    const newPos = this.pos.plus(this.speed.times(time))
    if (!state.level.touches(newPos, this.size, 'wall')) {
      return new Lava(newPos, this.speed, this.reset)
    } else if (this.reset) {
      return new Lava(this.reset, this.speed, this.reset)
    } else {
      return new Lava(this.pos, this.speed.times(-1))
    }
  }
}

const levelChars = {
  '.': 'empty',
  '#': 'wall',
  '+': 'lava',
  '@': Player,
  o: Coin,
  '=': Lava,
  '|': Lava,
  v: Lava
}

class Level {
  constructor (plan) {
    let rows = plan
      .trim()
      .split('\n')
      .map(l => [...l])
    this.height = rows.length
    this.width = rows[0].length
    this.startActors = []
    this.rows = rows.map((row, y) => {
      return row.map((ch, x) => {
        let type = levelChars[ch]
        if (typeof type === 'string') return type
        this.startActors.push(type.create(new Vector(x, y), ch))
        return 'empty'
      })
    })
  }

  touches (pos, size, type) {
    const xStart = Math.floor(pos.x)
    const xEnd = Math.ceil(pos.x + size.x)
    const yStart = Math.floor(pos.y)
    const yEnd = Math.ceil(pos.y + size.y)

    for (let y = yStart; y < yEnd; y++) {
      for (let x = xStart; x < xEnd; x++) {
        const isOutside = x < 0 || x >= this.width || y < 0 || y >= this.height
        const here = isOutside ? 'wall' : this.rows[y][x]
        if (here === type) return true
      }
    }
    return false
  }
}

class DOMDisplay {
  constructor (parent, level) {
    this.dom = elt('div', { class: 'game' }, drawGrid(level))
    this.actorLayer = null
    parent.appendChild(this.dom)
  }

  syncState (state) {
    if (this.actorLayer) this.actorLayer.remove()
    this.actorLayer = drawActors(state.actors)
    this.dom.appendChild(this.actorLayer)
    this.dom.className = `game ${state.status}`
    this.scrollPlayerIntoView(state)
  }

  scrollPlayerIntoView (state) {
    const width = this.dom.clientWidth
    const height = this.dom.clientHeight
    const margin = width / 3

    // The viewport
    const left = this.dom.scrollLeft
    const right = left + width

    const top = this.dom.scrollTop
    const bottom = top + height

    const player = state.player
    const center = player.pos.plus(player.size.times(0.5)).times(scale)

    if (center.x < left + margin) {
      this.dom.scrollLeft = center.x - margin
    } else if (center.x > right - margin) {
      this.dom.scrollLeft = center.x + margin - width
    }
    if (center.y < top + margin) {
      this.dom.scrollTop = center.y - margin
    } else if (center.y > bottom - margin) {
      this.dom.scrollTop = center.y + margin - height
    }
  }

  clear () {
    this.dom.remove()
  }
}

const scale = 20

const elt = (name, attrs, ...children) => {
  const dom = document.createElement(name)
  for (const attr of Object.keys(attrs)) {
    dom.setAttribute(attr, attrs[attr])
  }
  for (const child of children) {
    dom.appendChild(child)
  }
  return dom
}

const drawGrid = level => {
  return elt(
    'table',
    {
      class: 'background',
      style: `width: ${level.width * scale}px`
    },
    ...level.rows.map(row =>
      elt(
        'tr',
        { style: `height: ${scale}px` },
        ...row.map(type => elt('td', { class: type }))
      )
    )
  )
}

const drawActors = actors => {
  return elt(
    'div',
    {},
    ...actors.map(actor => {
      const rect = elt('div', { class: `actor ${actor.type}` })
      rect.style.width = `${actor.size.x * scale}px`
      rect.style.height = `${actor.size.y * scale}px`
      rect.style.left = `${actor.pos.x * scale}px`
      rect.style.top = `${actor.pos.y * scale}px`
      return rect
    })
  )
}

const overlap = (actor1, actor2) =>
  actor1.pos.x + actor1.size.x > actor2.pos.x &&
  actor1.pos.x + actor2.pos.x > actor2.size.x &&
  actor1.pos.y + actor1.size.y > actor2.pos.y &&
  actor1.pos.y + actor2.pos.y > actor2.size.y

const trackKeys = keys => {
  const down = Object.create(null)
  const track = event => {
    if (keys.includes(event.key)) {
      down[event.key] = event.type === 'keydown'
      event.preventDefualt()
    }
  }
  window.addEventListener('keydown', track)
  window.addEventListener('keyup', track)

  return down
}

const runAnimation = frameFunc => {
  let lastTime = null
  const frame = time => {
    if (lastTime !== null) {
      const timeStep = Math.min(time - lastTime, 100) / 1000
      if (frameFunc(timeStep) === false) return
    }
    lastTime = time
    document.requestAnimationFrame(frame)
  }
  document.requestAnimationFrame(frame)
}

const runLevel = (level, Display) => {
  const display = new Display(document.body, level)
  let state = State.start(level)
  let ending = 1

  return new Promise(resolve => {
    runAnimation(time => {
      state = state.update(time, arrowKeys)
      display.syncState(state)
      if (state.status === 'playing') {
        return true
      } else if (ending > 0) {
        ending -= time
        return true
      } else {
        display.clear()
        resolve(state.status)
        return false
      }
    })
  })
}

// const runGame = async (plans, Display) => {
//   for (let level = 0; level < plans;) {
//     let status = await runLevel(new Level(plans[level]), Display)
//     if (status === 'won') level++
//   }
//   console.log("You've won!")
// }

async function runGame (plans, Display) {
  for (let level = 0; level < plans;) {
    let status = await runLevel(new Level(plans[level]), Display)
    if (status === 'won') level++
  }
  console.log("You've won!")
}

const arrowKeys = trackKeys[('ArrowLeft', 'ArrowRight', 'ArrowUp')]

const GAME_LEVELS = [
  `                                                    
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
..................................................................###...........
...................................................##......##....##+##..........
....................................o.o......##..................#+++#..........
.................................................................##+##..........
...................................#####..........................#v#...........
............................................................................##..
..##......................................o.o................................#..
..#.....................o....................................................#..
..#......................................#####.............................o.#..
..#..........####.......o....................................................#..
..#..@.......#..#................................................#####.......#..
..############..###############...####################.....#######...#########..
..............................#...#..................#.....#....................
..............................#+++#..................#+++++#....................
..............................#+++#..................#+++++#....................
..............................#####..................#######....................
................................................................................
................................................................................
`,
  `                                                                     
................................................................................
................................................................................
....###############################.............................................
...##.............................##########################################....
...#.......................................................................##...
...#....o...................................................................#...
...#................................................=.......................#...
...#.o........################...................o..o...........|........o..#...
...#.........................#..............................................#...
...#....o....................##########.....###################....##########...
...#..................................#+++++#.................#....#............
...###############....oo......=o.o.o..#######.###############.#....#............
.....#...............o..o.............#.......#......#........#....#............
.....#....................#############..######.####.#.########....########.....
.....#.............########..............#...........#.#..................#.....
.....#..........####......####...#####################.#..................#.....
.....#........###............###.......................########....########.....
.....#.......##................#########################......#....#............
.....#.......#................................................#....#............
.....###......................................................#....#............
.......#...............o...........................................#............
.......#...............................................o...........#............
.......#########......###.....############.........................##...........
.............#..................#........#####....#######.o.........########....
.............#++++++++++++++++++#............#....#.....#..................#....
.............#++++++++++++++++++#..........###....###...####.o.............#....
.............####################..........#........#......#.....|.........#....
...........................................#++++++++#......####............#....
...........................................#++++++++#.........#........@...#....
...........................................#++++++++#.........##############....
...........................................##########...........................
................................................................................
`,
  `
......................................#++#........................#######....................................#+#..
......................................#++#.....................####.....####.................................#+#..
......................................#++##########...........##...........##................................#+#..
......................................##++++++++++##.........##.............##...............................#+#..
.......................................##########++#.........#....................................o...o...o..#+#..
................................................##+#.........#.....o...o....................................##+#..
.................................................#+#.........#................................###############++#..
.................................................#v#.........#.....#...#........................++++++++++++++##..
.............................................................##..|...|...|..##............#####################...
..............................................................##+++++++++++##............v........................
...............................................................####+++++####......................................
...............................................#.....#............#######........###.........###..................
...............................................#.....#...........................#.#.........#.#..................
...............................................#.....#.............................#.........#....................
...............................................#.....#.............................##........#....................
...............................................##....#.............................#.........#....................
...............................................#.....#......o..o.....#...#.........#.........#....................
...............#######........###...###........#.....#...............#...#.........#.........#....................
..............##.....##.........#...#..........#.....#.....######....#...#...#########.......#....................
.............##.......##........#.o.#..........#....##...............#...#...#...............#....................
.....@.......#.........#........#...#..........#.....#...............#...#...#...............#....................
....###......#.........#........#...#..........#.....#...............#...#####...######......#....................
....#.#......#.........#.......##.o.##.........#.....#...............#.....o.....#.#.........#....................
++++#.#++++++#.........#++++++##.....##++++++++##....#++++++++++.....#.....=.....#.#.........#....................
++++#.#++++++#.........#+++++##.......##########.....#+++++++##+.....#############.##..o.o..##....................
++++#.#++++++#.........#+++++#....o.................##++++++##.+....................##.....##.....................
++++#.#++++++#.........#+++++#.....................##++++++##..+.....................#######......................
++++#.#++++++#.........#+++++##.......##############++++++##...+..................................................
++++#.#++++++#.........#++++++#########++++++++++++++++++##....+..................................................
++++#.#++++++#.........#++++++++++++++++++++++++++++++++##.....+..................................................
`,
  `
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
........................................o.....................................................................
..............................................................................................................
........................................#.....................................................................
........................................#.....................................................................
........................................#.....................................................................
........................................#.....................................................................
.......................................###....................................................................
.......................................#.#.................+++........+++..###................................
.......................................#.#.................+#+........+#+.....................................
.....................................###.###................#..........#......................................
......................................#...#.................#...oooo...#.......###............................
......................................#...#.................#..........#......#+++#...........................
......................................#...#.................############.......###............................
.....................................##...##......#...#......#................................................
......................................#...#########...########..............#.#...............................
......................................#...#...........#....................#+++#..............................
......................................#...#...........#.....................###...............................
.....................................##...##..........#.......................................................
......................................#...#=.=.=.=....#............###........................................
......................................#...#...........#...........#+++#.......................................
......................................#...#....=.=.=.=#.....o......###.......###..............................
.....................................##...##..........#.....................#+++#.............................
..............................o...o...#...#...........#.....#................##v........###...................
......................................#...#...........#..............#.................#+++#..................
.............................###.###.###.###.....o.o..#++++++++++++++#...................v#...................
.............................#.###.#.#.###.#..........#++++++++++++++#........................................
.............................#.............#...#######################........................................
.............................##...........##.........................................###......................
..###.........................#.....#.....#.........................................#+++#................###..
..#.#.........................#....###....#..........................................###.................#.#..
..#...........................#....###....#######........................#####.............................#..
..#...........................#...........#..............................#...#.............................#..
..#...........................##..........#..............................#.#.#.............................#..
..#.......................................#.......|####|....|####|.....###.###.............................#..
..#................###.............o.o....#..............................#.........###.....................#..
..#...............#####.......##..........#.............................###.......#+++#..........#.........#..
..#...............o###o.......#....###....#.............................#.#........###..........###........#..
..#................###........#############..#.oo.#....#.oo.#....#.oo..##.##....................###........#..
..#......@..........#.........#...........#++#....#++++#....#++++#....##...##....................#.........#..
..#############################...........#############################.....################################..
..............................................................................................................
..............................................................................................................
`,
  `
..................................................................................................###.#.......
......................................................................................................#.......
..................................................................................................#####.......
..................................................................................................#...........
..................................................................................................#.###.......
..........................o.......................................................................#.#.#.......
.............................................................................................o.o.o###.#.......
...................###................................................................................#.......
.......+..o..+................................................#####.#####.#####.#####.#####.#####.#####.......
.......#.....#................................................#...#.#...#.#...#.#...#.#...#.#...#.#...........
.......#=.o..#............#...................................###.#.###.#.###.#.###.#.###.#.###.#.#####.......
.......#.....#..................................................#.#...#.#...#.#...#.#...#.#...#.#.....#.......
.......+..o..+............o..................................####.#####.#####.#####.#####.#####.#######.......
..............................................................................................................
..........o..............###..............................##..................................................
..............................................................................................................
..............................................................................................................
......................................................##......................................................
...................###.........###............................................................................
..............................................................................................................
..........................o.....................................................#......#......................
..........................................................##.....##...........................................
.............###.........###.........###.................................#..................#.................
..............................................................................................................
.................................................................||...........................................
..###########.................................................................................................
..#.........#.o.#########.o.#########.o.##................................................#...................
..#.........#...#.......#...#.......#...#.................||..................#.....#.........................
..#..@......#####...o...#####...o...#####.....................................................................
..#######.....................................#####.......##.....##.....###...................................
........#=..................=................=#...#.....................###...................................
........#######################################...#+++++++++++++++++++++###+++++++++++++++++++++++++++++++++++
..................................................############################################################
..............................................................................................................
`
]

runGame(GAME_LEVELS, DOMDisplay)
